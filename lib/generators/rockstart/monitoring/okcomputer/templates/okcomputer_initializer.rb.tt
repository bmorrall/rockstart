# frozen_string_literal: true

# Log output to logger
OkComputer.logger = Rails.logger

# Require authentication
username = ENV.fetch("OKCOMPUTER_USERNAME", "okcomputer")
password = ENV.fetch("OKCOMPUTER_PASSWORD") { SecureRandom.hex }
OkComputer.require_authentication(username, password, except: %w[default])

# Cache
OkComputer::Registry.register "cache", OkComputer::GenericCacheCheck.new

<%- if memcached? -%>
# Cache (Memcached)
memcached_servers = ENV.fetch("MEMCACHE_SERVERS") { ENV.fetch("MEMCACHIER_SERVERS", "") }
memcached_servers.split(",").each_with_index do |cache_server, index|
  memcached_check = index.zero? ? "memcached" : "memcached_#{index}"
  OkComputer::Registry.register memcached_check, OkComputer::CacheCheck.new(cache_server)
end

<%- end -%>
<%- if sidekiq? -%>
# Redis
OkComputer::Registry.register "redis", OkComputer::RedisCheck.new(url: ENV["REDIS_URL"])

# Sidekiq
OkComputer::Registry.register "sidekiq-default", OkComputer::SidekiqLatencyCheck.new("default")
<%- if rollbar? -%>
OkComputer::Registry.register "sidekiq-rollbar", OkComputer::SidekiqLatencyCheck.new("rollbar")
<%- end -%>

<%- end -%>
# mount at /health
OkComputer.mount_at = "health"
